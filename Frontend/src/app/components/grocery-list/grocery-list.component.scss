@use "sass:map";
@import "src/assets/themeVariables.scss";

$width: 50em;
$actionMenuHeight: 80px;

.itemDnDContainer {
  width: $width;
  max-width: 95%;
  border: none;
  min-height: 200px;
  align-content: center;
  justify-content: center;
  display: block;
  background: transparent;
  overflow: hidden;
  position: absolute;
  top: 175px;
  left: 50%;
  transform: translateX(-50%);
  height: available;
  z-index: 2;
  padding-bottom: $actionMenuHeight + 100px;
}

/*
Item box
 */

.itemBox {
  padding: 10px 10px;
  border-bottom: solid 2px map.get($accent-colors, "lighter");
  color: $dark-primary-text;
  display: flex;
  width: 100%;
  flex-direction: row;
  align-items: center;
  justify-content: space-between;
  box-sizing: border-box;
  cursor: grabbing; //Should be move per convention, but looks bad
  background: $light-background;
  font-size: 14px;
  min-height: 50px;
}

.itemBox:hover {
  background: map.get($accent-colors, "lighter");
  transition: 0.3s;
}

.itemBoxSelected {
  @extend .itemBox;
  background: map.get($primary-colors, "main");
}

.itemBoxSelected:hover {
  background: map.get($primary-colors, "lighter");
  transition: 0.3s;
}

@keyframes growToEditItemBoxHeight {
  from {
    height: 50px;
  }
  to {
    height: 130px;
  }
}

.editingItemBox {
  @extend .itemBox;
  animation: growToEditItemBoxHeight 0.3s ease-in-out;
  height: 130px;
  background: darken($light-background, 5%);
  cursor: default;
}

.editingItemBox:hover {
  background: mix(
    darken($light-background, 5%),
    map.get($accent-colors, "lighter"),
    80%
  );
  transition: 0.3s;
}

.itemBox:first-child {
  border-top: solid 2px map.get($accent-colors, "lighter");
}

.itemBoxChecked {
  @extend .itemBox;
  background: saturate(
    mix($light-background, map.get($accent-colors, "darker"), 40%),
    30%
  );
  text-decoration: line-through;
  opacity: 0.6;
}

.itemBoxChecked:hover {
  background: saturate(
    mix($light-background, map.get($accent-colors, "main"), 40%),
    20%
  );
  transition: 0.3s;
}

.itemBoxCheckedAndSelected {
  @extend .itemBoxChecked;
  background: mix(
    map.get($primary-colors, "main"),
    map.get($accent-colors, "darker"),
    60%
  );
  text-decoration: line-through;
  opacity: 0.9;
}

.itemBoxCheckedAndSelected:hover {
  background: lighten(
    mix(map.get($primary-colors, "main"), map.get($accent-colors, "main"), 60%),
    10%
  );
  transition: 0.3s;
}

.itemBoxSkipped {
  @extend .itemBox;
  background: mix($light-background, map.get($warn-colors, "darker"), 40%);
  text-decoration: line-through;
  opacity: 0.6;
}

.itemBoxSkipped:hover {
  background: mix($light-background, map.get($warn-colors, "main"), 40%);
  transition: 0.3s;
}

.itemBoxSkippedAndSelected {
  @extend .itemBoxSkipped;
  background: saturate(
    mix($light-background, map.get($warn-colors, "darker"), 40%),
    20%
  );
  text-decoration: line-through;
  opacity: 0.9;
}

.itemBoxSkippedAndSelected:hover {
  background: saturate(
    mix($light-background, map.get($warn-colors, "main"), 40%),
    10%
  );
  transition: 0.3s;
}

/*
Menu button on list item
 */
.menuButton {
  opacity: 0;
  transition: 0.3s;
  right: 0;
  position: absolute;
  padding: 0;
  margin: 0;
  color: $dark-disabled-text;
}

.menuButton:hover {
  color: map.get($accent-colors, "darker");
}

.deleteLbl {
  color: map.get($warn-colors, "main");
  font-weight: 500;
}

.opened {
  opacity: 1;
}

::ng-deep .mat-menu-content {
  padding: 0 !important;
}

::ng-deep .mat-menu-panel {
  background-color: $light-background;
  min-height: 45px !important;
}

.mat-menu-item {
  color: $dark-primary-text !important;
  padding: 0 0.5em;
}

button.mat-menu-item {
  background-color: $light-background;
}

button.mat-menu-item:hover {
  background-color: map.get($primary-colors, "main");
  color: $dark-primary-text !important;
}

/*
Quantity box for indicating the quantity of an item
 */

.quantityIndicator {
  background: map.get($accent-colors, "main");
  color: $light-text;
  border-radius: 3px;
  width: 23px;
  height: 23px;
  min-width: 23px;
  min-height: 23px;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 1em;
  font-weight: 500;
  margin-right: 10px;
  padding-bottom: 0;
  margin-bottom: 0;
}

.quantityIndicatorSingle {
  @extend .quantityIndicator;
  border-radius: 30px;
  width: 23px;
  height: 23px;
}

.itemCheckbox {
  padding-left: 20px;
  right: 15px;
  position: absolute;
}

.parentContainer {
  max-width: 100%;
  height: 100%;
  position: relative;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

.titleContainer {
  display: inline-block;
  position: fixed;
  width: $width;
  max-width: 95%;
  height: available;
  top: 0;
  z-index: 5;
  border-bottom: 5px solid map.get($primary-colors, "main");
  background-color: $light-background;
  padding: 100px 0 2px;
  margin-right: 0;
  margin-left: 0;
  white-space: initial;
  text-overflow: ellipsis;
}

.title {
  position: absolute;
  float: left;
  left: 45px;
  font-size: 1.5em;
  font-family: Roboto, serif;
  translate: 0 7px;
  padding: 0;
  display: inline;
  margin-bottom: 30px;

  max-width: 80%;
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}

.category {
  position: absolute;
  right: 45px;
  font-size: 1em;
  font-family: Roboto, serif;
  padding: 3px;
  display: inline;
  background-color: map.get($accent-colors, "lighter");
  border-radius: 5px;

  max-width: 80%;
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}

.listActionsContainer {
  display: flex;
  align-items: center;
  float: right;
  padding-right: 5px;
  translate: 0 3px;
}

.listActionBtn {
  position: relative;
  float: right;
  margin: 0;
  padding: 0;
  transition: 0.3s;
}

.listActionBtn:hover {
  color: map.get($primary-colors, "darker");
}

.listActionBtn:active {
  color: map.get($primary-colors, "main");
}

.listActionBtn:disabled {
  opacity: 1;
}

.backButton {
  position: fixed;
  background-color: transparent;
  z-index: 110;
  translate: 0 4px;
}

.back-icon {
  height: 24px;
  width: 24px;
  font-size: 24px !important;
  color: $light-primary-text;
  background-color: map.get($primary-colors, "main");
  border-radius: 5px;
  transition: 0.3s;
}

.back-icon:hover {
  background-color: map.get($primary-colors, "darker");
}

.back-icon:active {
  background-color: map.get($primary-colors, "lighter");
}

.cdk-drag-preview {
  box-sizing: border-box;
  border-radius: 4px;
  box-shadow: 0 2px 2px -1px rgba(0, 0, 0, 0.2),
    0 4px 5px 1px rgba(0, 0, 0, 0.14), 0 2px 7px 2px rgba(0, 0, 0, 0.12);
}

.cdk-drag-placeholder {
  opacity: 0;
}

.cdk-drag-animating {
  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);
}

.example-list.cdk-drop-list-dragging .example-box:not(.cdk-drag-placeholder) {
  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);
}

.dockToBottom {
  width: $width;
  max-width: 95%;
  position: fixed;
  display: inline-flex;
  flex-direction: row-reverse;
  justify-content: right;
  align-items: center;
  bottom: 0;
  z-index: 110;
  margin: 0;
  height: $actionMenuHeight;
}

.dockToBottom > * {
  margin: 0 8px;
}

.crudActionsContainer {
  display: inline-flex;
  flex-direction: row-reverse;
}

.crudActionsContainer > * {
  margin: 0 8px;
}

.matFabAddBtn {
  position: relative;
  vertical-align: center;
  align-items: center;
  display: flex;
  flex-direction: column;
  right: 0;
  background-color: map.get($primary-colors, "darker");
  color: map.get($primary-colors, "lighter");
  transition: 0.3s;
}

.icon-display {
  transform: scale(1.5);
}

.matFabAddBtn:hover {
  background-color: map.get($primary-colors, "main");
}

.matFabAddBtn:active {
  background-color: map.get($primary-colors, "lighter");
  color: map.get($primary-colors, "darker");
}

.matFabMiniBtn {
  @extend .matFabAddBtn;
  background-color: map.get($grey-colors, "lighter");
  color: $dark-primary-text;
}

.matFabMiniBtn:hover {
  background-color: map.get($grey-colors, "main");
}

.matFabMiniBtn:active {
  background-color: map.get($accent-colors, "lighter");
}

.matFabDeleteBtn {
  @extend .matFabMiniBtn;
}

.matFabDeleteBtn:hover {
  background-color: map.get($warn-colors, "main");
  color: $light-text;
}

.matFabDeleteBtn:active {
  background-color: map.get($warn-colors, "lighter");
  color: map.get($warn-colors, "darker");
}

@keyframes leaveToBottom {
  from {
    transform: translate(0);
  }
  to {
    transform: translateY(50%);
  }
}

@keyframes returnFromBottom {
  from {
    transform: translateY(50%);
  }
  to {
    transform: translateY(0);
  }
}

.animateOutOfFrame {
  animation: leaveToBottom 0.5s ease-in-out;
  transition: 0.5s;
  opacity: 0;
}

.animateIntoFrame {
  animation: returnFromBottom 0.5s ease-in-out;
  transition: 0.5s;
  opacity: 1;
}

.hidden {
  display: none;
  visibility: hidden;
  opacity: 0;
  transition: 0.3s;
}
