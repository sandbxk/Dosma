@use "sass:map";
@import "src/assets/themeVariables.scss";

$width: 50em;

.itemDnDContainer {
  width: $width;
  max-width: 100%;
  border: none;
  min-height: 200px;
  align-content: center;
  justify-content: center;
  display: block;
  background: transparent;
  overflow: hidden;
  position: absolute;
  top: 175px;
  left: 50%;
  transform: translateX(-50%);
  height: available;
  z-index: 1;
  padding-bottom: 100px;
}

/*
Item box
 */

.itemBox {
  padding: 10px 10px;
  border-bottom: solid 2px map.get($accent-colors, "lighter");
  color: $dark-primary-text;
  display: flex;
  width: 100%;
  flex-direction: row;
  align-items: center;
  justify-content: space-between;
  box-sizing: border-box;
  cursor: grabbing; //Should be move per convention, but looks bad
  background: $light-background;
  font-size: 14px;
}

.itemBox:hover {
  background: map.get($accent-colors, "lighter");
  transition: 0.3s;
}


.itemBox:first-child {
  border-top: solid 2px map.get($accent-colors, "lighter");;
}


/*
Menu button on list item
 */
.menuButton {
  opacity: 0;
  transition: 0.3s;
  right: 0;
  position: absolute;
  padding: 0;
  margin: 0;
  color: $dark-disabled-text;
}

.menuButton:hover {
  color: map.get($accent-colors, "darker");
}

.deleteLbl {
  color: map.get($warn-colors, "main");
  font-weight: 500;
}

.itemBox:hover > button
{
  opacity: 1;
}

.opened
{
  opacity: 1;
}


::ng-deep .mat-menu-content {
  padding: 0 !important;
}

.mat-menu-item {
  color: $dark-primary-text !important;
  padding: 0 0.5em;
}

button.mat-menu-item{
  background-color: $light-background;
}

button.mat-menu-item:hover {
  background-color: map.get($primary-colors, "main");
  color: $dark-primary-text !important;
}


/*
Quantity box for indicating the quantity of an item
 */

.quantityIndicator{
  background: map.get($accent-colors, "main");
  color: $light-text;
  border-radius: 10%;
  width: 23px;
  height: 23px;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 1em;
  font-weight: 500;
  margin-right: 10px;
  padding-bottom: 0;
  margin-bottom: 0;
}

.quantityIndicatorSingle{
  @extend .quantityIndicator;
  border-radius: 50%;
  width: 23px;
  height: 23px;

}

.mockCheckbox {
  right: 15px;
  position: absolute;
}

.parentContainer {
  overflow-y: scroll;
  max-width: 100%;
  height: 100%;
  position: relative;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

.titleContainer {
  display: inline-block;
  position: fixed;
  width: $width;
  max-width: 100%;
  height: available;
  padding-top: 100px;
  top: 0;
  left: 50%;
  transform: translateX(-50%);
  z-index: 101;
  padding-bottom: 2px;
  border-bottom: 5px solid map.get($primary-colors, "main");
  background-color: $light-background;
}

.title {
  position: absolute;
  font-family: Roboto, serif;
  margin-left: 10px;
  padding: 0;
  font-size: 1.5em;
  float: left;
  translate: 0 7px;
}


.listActionsContainer {
  display: flex;
  align-items: center;
  float: right;
  padding-right: 5px;
}


.listActionBtn {
  position: relative;
  float: right;
  margin: 0;
  padding: 0;
  transition: 0.3s;
}

.listActionBtn:hover {
  color: map.get($primary-colors, "main");
}

.listActionBtn:active {
  color: map.get($primary-colors, "darker");
}

.listActionBtn:disabled {
  opacity: 0.5;
}

.backButton {
  position: fixed;
  top: 110px;
  left: 50%;
  transform: translate(-500px, 0);
  margin: 0;
  padding: 0;
  background-color: map.get($primary-colors, "main");
}

.backButton:hover {
  background-color: map.get($primary-colors, "darker");
}

.backButton:active {
  background-color: map.get($primary-colors, "lighter");
}





.cdk-drag-preview {
  box-sizing: border-box;
  border-radius: 4px;
  box-shadow: 0 2px 2px -1px rgba(0, 0, 0, 0.2),
  0 4px 5px 1px rgba(0, 0, 0, 0.14),
  0 2px 7px 2px rgba(0, 0, 0, 0.12);
}

.cdk-drag-placeholder {
  opacity: 0;
}

.cdk-drag-animating {
  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);
}

.example-list.cdk-drop-list-dragging .example-box:not(.cdk-drag-placeholder) {
  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);
}

.testBox {
  background-color: map.get($accent-colors, "lighter");
  width: $width;
  height: 150px;
  position: absolute;
  bottom: 0;
  left: 50%;
  transform: translate(-50%, 0);
  z-index: 100;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 1.5em;
  font-weight: 500;
  color: $dark-primary-text;
}
